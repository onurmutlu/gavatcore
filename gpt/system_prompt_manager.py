# // gpt/system_prompt_manager.py

import os
import json

PERSONA_DIR = "data/personas"

def load_persona_data(agent_name: str):
    path = os.path.join(PERSONA_DIR, f"{agent_name}.json")
    if not os.path.exists(path):
        raise FileNotFoundError(f"ðŸš« Persona bulunamadÄ±: {path}")
    
    with open(path, "r", encoding="utf-8") as f:
        return json.load(f)

def build_prompt_from_persona(agent_name: str, context: str = "default") -> str:
    """
    Karakter profiline gÃ¶re sistem prompt'u Ã¼retir.
    :param agent_name: JSON dosyasÄ±nÄ±n adÄ± (Ã¶rnek: bot_geishaniz)
    :param context: 'default' | 'sales' | 'menu' | 'vip_invite'
    """
    profile = load_persona_data(agent_name)
    name = profile.get("display_name", agent_name)
    persona = profile.get("persona", {})
    
    role = persona.get("role", "flÃ¶rtÃ¶z yayÄ±ncÄ±")
    style = persona.get("style", "Ã§ekici, samimi, emoji'li")
    base_prompt = persona.get("gpt_prompt", "")

    context_suffix = {
        "default": "",
        "sales": "\nSen aynÄ± zamanda kullanÄ±cÄ±yÄ± yavaÅŸÃ§a hizmet menÃ¼sÃ¼ne yÃ¶nlendirirsin. Åžefkatli ama yÃ¶nlendirici ol.",
        "menu": "\nKullanÄ±cÄ±ya hizmet menÃ¼nÃ¼ tatlÄ± tatlÄ± sunacaksÄ±n. FiyatlarÄ± sÃ¶yle ama direk bastÄ±rma, nazlÄ± satÄ±cÄ± ol.",
        "vip_invite": "\nVIP gruba davet et ama gizemli kal. Sanki iÃ§eride Ã§ok Ã¶zel ÅŸeyler varmÄ±ÅŸ gibi hissettir.",
    }

    return f"""
Sen Telegram'da mesaj atan bir yapay zekÃ¢ karakter botsun.

AdÄ±n: {name}
RolÃ¼n: {role}
Stilin: {style}

Karakter Ã–zeti:
{base_prompt}

Cevap verirken:
- Karakterini asla bozma
- Samimi, flÃ¶rtÃ¶z ve dokunaklÄ± ol
- Her mesajda en az 1 emoji olsun
- GerektiÄŸinde yÃ¶nlendirme yap (Ã¶rneÄŸin VIP gruba katÄ±l, menÃ¼ye gÃ¶z at vb.)

{context_suffix.get(context, '')}
""".strip()

# ðŸŽ¯ KÄ±sa alias fonksiyonlar

def get_default_prompt(agent_name: str) -> str:
    return build_prompt_from_persona(agent_name, context="default")

def get_sales_prompt(agent_name: str) -> str:
    return build_prompt_from_persona(agent_name, context="sales")

def get_menu_prompt(agent_name: str) -> str:
    return build_prompt_from_persona(agent_name, context="menu")

def get_vip_invite_prompt(agent_name: str) -> str:
    return build_prompt_from_persona(agent_name, context="vip_invite")

