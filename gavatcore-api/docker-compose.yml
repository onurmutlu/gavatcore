version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gavatcore_postgres
    environment:
      POSTGRES_DB: gavatcore_saas
      POSTGRES_USER: gavatcore
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gavatcore"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gavatcore_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GavatCore API (development)
  api:
    build: .
    container_name: gavatcore_api
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://gavatcore:password123@postgres:5432/gavatcore_saas
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./sessions:/app/sessions
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # PgAdmin (optional database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gavatcore_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gavatcore.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: gavatcore_network 