version: '3.8'

services:
  # üöÄ Main GAVATCore Application
  gavatcore-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VERSION: ${VERSION:-6.0.0}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
    container_name: gavatcore-app
    ports:
      - "5050:5050"  # Flask API
      - "5051:5051"  # XP Token API
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=production
      - DATABASE_URL=/app/gavatcore_v2.db
    volumes:
      - gavatcore_data:/app/data
      - gavatcore_sessions:/app/sessions
      - gavatcore_logs:/app/logs
    networks:
      - gavatcore-network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # üéõÔ∏è Admin Dashboard API
  gavatcore-admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    container_name: gavatcore-admin
    ports:
      - "5055:5055"  # Admin Dashboard
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_PATH=/app/gavatcore_v2.db
    volumes:
      - gavatcore_data:/app/data:ro
    networks:
      - gavatcore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5055/api/admin/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # üóÑÔ∏è Redis Cache (Optional for advanced caching)
  redis:
    image: redis:7-alpine
    container_name: gavatcore-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gavatcore-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üìä Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: gavatcore-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - gavatcore-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # üìà Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: gavatcore-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=gavatcore2025
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - gavatcore-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # üåê Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: gavatcore-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - gavatcore-network
    restart: unless-stopped
    depends_on:
      - gavatcore-app
      - gavatcore-admin

# üì¶ Named Volumes for Data Persistence
volumes:
  gavatcore_data:
    driver: local
  gavatcore_sessions:
    driver: local
  gavatcore_logs:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

# üåê Networks
networks:
  gavatcore-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16